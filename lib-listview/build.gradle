apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    resourcePrefix "swipemenulistview"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:23.1.1'
}



//version = "1.3.0"
//
//def siteUrl = 'https://github.com/baoyongzhang/SwipeMenuListView'
//def gitUrl = 'https://github.com/baoyongzhang/SwipeMenuListView.git'
//group = "com.baoyz.swipemenulistview"
//install {
//    repositories.mavenInstaller {
//        pom {
//            project {
//                packaging 'aar'
//                // Add your description here
//                name 'SwipeMenuListView' 	//项目描述
//                url siteUrl
//                // Set your license
//                licenses {
//                    license {
//                        name 'The MIT License (MIT)'
//                        url 'http://baoyz.com/licenses/LICENSE.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id 'baoyongzhang'		//填写的一些基本信息
//                        name 'baoyongzhang'
//                        email 'baoyz94@gmail.com'
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//                }
//            }
//        }
//    }
//}
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())

